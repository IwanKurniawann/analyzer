name: Crypto Trading Signal Analyzer

on:
  push:
    branches: [ main ]
  schedule:
    # Mengurangi frekuensi untuk tetap di bawah batas kuota gratis Gemini
    - cron: '0 * * * *'
  workflow_dispatch: # Memungkinkan eksekusi manual

jobs:
  run-analyzer:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install TA-Lib from source
      run: |
        wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
        tar -xzf ta-lib-0.4.0-src.tar.gz
        cd ta-lib/
        ./configure --prefix=/usr
        make
        sudo make install

    - name: Set up Python
      id: setup-python # Memberi ID pada langkah ini untuk referensi
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    # --- LANGKAH BARU: Cache dependensi Python ---
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        # Lokasi direktori cache untuk pip
        path: ~/.cache/pip
        # Kunci unik untuk cache. Cache baru akan dibuat jika requirements.txt berubah.
        key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-pip-${{ hashFiles('**/requirements.txt') }}
        # Kunci pemulihan jika kunci utama tidak ditemukan
        restore-keys: |
          ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Python Analyzer Script
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: python main.py

